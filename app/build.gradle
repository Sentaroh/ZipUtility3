apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.sentaroh.android.ZipUtility3"
        minSdkVersion 26
        targetSdkVersion 29

        versionCode 39
        versionName "1.38"
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("debug")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_debug.${fileExtension}"
//                        outputFileName = "../../../../../release/"+newName
                        outputFileName = newName

                        task copyDebugApk(type: Copy) {
                            from 'build/outputs/apk/debug'
                            into '../release/' // Into the project root, one level above the app folder
                            include '**/*debug.apk'
                        }

                        afterEvaluate {
                            packageDebug.finalizedBy(copyDebugApk)
                        }

                    }
                }
            }

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("release")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_${versionName}_${versionNumber}_release.${fileExtension}"
                        outputFileName = newName
                    }
                }
            }

        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'com.google.android.material:material:1.2.0'

    implementation files('libs/Utilities3-1.0.3.aar')
    implementation files('libs/commons-compress-1.20.jar')
    implementation files('libs/xz-1.8.jar')

    implementation files('libs/MarkDownJ_0.4.jar')

//    implementation 'androidx.activity:activity:1.2.0-alpha02'
//    def fragment_version = "1.3.0-alpha04"
//    implementation "androidx.fragment:fragment-ktx:$fragment_version"
//    implementation "androidx.core:core-ktx:+"

}
